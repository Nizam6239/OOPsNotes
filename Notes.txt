1. OBJECTS: Objects are entities in the real world.

2. Class: Class is like a blueprint of these entities.

3. ACCESS MODIFIER:
  i. Public : Data and methods accessible to everyone.
  ii. Private : Data and methods accessible inside class.
  iii. Protected : Data and methods accessible inside class and to its access derive class.

4. ENCAPSULATION : Encapsulation is wrapping up of data & member functions in a single unit called class.

5. Constructor : Special methods invoked automatically at the time of object creation. Used for Initialisation.
  i. Same name as class
  ii. Constructor does not have a return type.
  iii. Only called once (automatically), at object creation.
  iv. Memory allocation happens when constructor is called.

6. this : this is a special pointer in C++ that points to the current object.
    i. this->prop is same as *(this).prop

7. Copy Constructor : Special Constructor (default) used to copy properties of one object into another.

8. Shallow and Deep Copy
    i. Shallow Copy : A shallow copy of an object copies all the member values from one object to another.
    ii. Deep Copy :  A Deep Copy, on the other hand, not only copies the member values but also make the copies of any dynamically allocated memory that the members point to.

9. Destructor : Deallocate the memory of the class.

10. Inheritance : When properties and member functions of base class are passed on the derived class.(Code Reuseability).

      ---------------------------------------------------------------------------
      |            |  Derived Class    |  Derived Class    |  Derived Class     |
      ---------------------------------------------------------------------------
      | Base Class | Private Mode      |  Protected Mode   |  Private Mode      |
      ---------------------------------------------------------------------------
      | Private    |  Not Inherited    |  Not Inherited    |  Not Inherited     |
      ---------------------------------------------------------------------------
      | Protected  |  Private          |  Protected        |  Protected         |
      ---------------------------------------------------------------------------
      | Public     |  Private          |  Protected        |  Public            |
      ---------------------------------------------------------------------------

      i. single Inheritance

              Parent Class ----------------> Child Class

      ii. Multi-level Inheritance

              Parent Class ----------------> Parent Class -----------------------> Child Class

      iii. Multiple Inheritance
               
               Parent Class -----------------------|
                                                   |------------> Child Class
               Parent Class -----------------------|

      iv.  Hierarchial Inheritance 

               
                                               |------------------> Child Class
               Parent Class -------------------|
                                               |------------------> Child Class

      v. Hybrid Inheritance
                                               |---------------------> Child Class |-------------------------> Child Class
              Parent Class --------------------|                                   |
                                               |---------------------> Child Class |------------> Child Class


11. Polymorphism : Polymorphism is the ability of objects to take on different forms or behave in different ways of depending on the context in which they are used.

 i. Compile Polymorphism
 ii. Run Time Polymorphism

12. Abstraction : Hiding all the unnecessary details and showing only the important parts.